import boto3

s3 = boto3.client('s3')
kms = boto3.client('kms')

bucket_name = 'S3_BUCKET_NAME'
incoming_folder = 'incoming/'
staged_folder = 'staged/'

kms_key_id = 'KMS_KEY_ID'

def lambda_handler(event, context):
    # Get the S3 object key from the event
    s3_object_key = event['Records'][0]['s3']['object']['key']
    
    # Check if the object is in the "incoming" folder
    if not s3_object_key.startswith(incoming_folder):
        return
    
    # Get the object from S3
    object_response = s3.get_object(Bucket=bucket_name, Key=s3_object_key)
    object_content = object_response['Body'].read()
    
    # Encrypt the object using KMS
    kms_response = kms.encrypt(
        KeyId=kms_key_id,
        Plaintext=object_content
    )
    encrypted_content = kms_response['CiphertextBlob']
    
    # Save the encrypted object to the "staged" folder
    staged_key = staged_folder + s3_object_key[len(incoming_folder):]
    s3.put_object(Bucket=bucket_name, Key=staged_key, Body=encrypted_content)
    
    # Delete the original object from the "incoming" folder
    s3.delete_object(Bucket=bucket_name, Key=s3_object_key)
